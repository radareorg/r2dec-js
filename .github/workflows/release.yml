name: Release

on:
  push:
    branches:
    - 'release-*'

jobs:

  #build-osx:
  #  name: Macos build
  #  runs-on: macos-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: build
  #      run: make ./p/

  #build-windows:
  #  name: Windows build
  #  runs-on: windows-latest
  #  strategy:
  #    fail-fast: false
  #    matrix:
  #      name: [vs2019_static, clang_cl]
  #      include:
  #        - name: vs2019_static
  #          compiler: cl
  #          meson_options: --default-library=static -Dstatic_runtime=true
  #        - name: clang_cl
  #          compiler: clang-cl
  #          meson_options: --default-library=shared
  #  steps:
  #    - uses: actions/checkout@v2
  #    - uses: actions/setup-python@v2
  #    - name: install dependencies
  #      shell: pwsh
  #      run: |
  #        python -m pip install --upgrade pip
  #        pip install meson ninja
  #    - name: build with meson + ninja
  #      shell: pwsh
  #      run: |
  #        .github\vsdevenv.ps1
  #        meson --buildtype=release --prefix=$PWD\radare2-install build ${{ matrix.meson_options }}
  #        ninja -C build

  build-deb:
    name: Build deb package for ${{ matrix.container }}
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        name: [debian-buster, ubuntu-1804]
        include:
          - name: debian-buster
            container: debian:buster
          - name: ubuntu-1804
            container: ubuntu:18.04
    steps:
      - uses: actions/checkout@v2
      - name: extract r2 version
        shell: bash
        run: echo "##[set-output name=version;]$(echo ${GITHUB_REF##*/} | sed 's/release-//')"
        id: radare2
      - name: Install requirements
        run: apt-get update && apt-get install --yes wget pkg-config build-essential
      - name: Build 
        run: |
          VERSION=${{ steps.radare2.outputs.version }} \
          DISTRIB=${{ matrix.name }} \
          make -C p/dist/debian
          mv p/dist/debian/*.deb p/dist/debian/r2dec-amd64.deb
      - name: upload .deb file
        uses: actions/upload-artifact@v2
        with:
          name: r2dec-${{ matrix.name }}-deb
          path: p/dist/debian/r2dec-amd64.deb

  create-release:
    runs-on: ubuntu-latest
    needs: [build-deb]
    steps:
      - uses: actions/checkout@v2
      - name: extract r2 version
        shell: bash
        run: echo "##[set-output name=version;]$(echo ${GITHUB_REF##*/} | sed 's/release-//')"
        id: radare2

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.radare2.outputs.version }}
          release_name: Release ${{ steps.radare2.outputs.version }}
          draft: true
          prerelease: false

      - name: upload debian:buster package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./r2dec-debian-buster-deb/r2dec_amd64.deb
          asset_name: r2dec-debian-buster_${{ steps.radare2.outputs.version }}_amd64.deb
          asset_content_type: application/zip

      - name: upload ubuntu:18.04 package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./r2dec-ubuntu-1804-deb/r2dec_amd64.deb
          asset_name: r2dec-ubuntu-1804_${{ steps.radare2.outputs.version }}_amd64.deb
          asset_content_type: application/zip